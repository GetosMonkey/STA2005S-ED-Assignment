---
title: " üìä Experimental Design Project"
subtitle: "STA2005S - 2025"
author: 
  - "Maryam Abrahams (ABRMAR043)"
  - "Bheka Mabika (MBKBHE002)"
format: 
    pdf:
      toc: true
---

\rule{\linewidth}{0.2pt}


![Blocking example greenhouse](Plaigirism1.jpg){width=55%}
![Blocking example greenhouse](plagiarism2.png){width=55%}

\rule{\linewidth}{0.2pt}

# üå∂Ô∏è Introduction:

The two chilli farmers, Ms Hopeful and Mr Growing, compete head to head for the hearts and minds of the South African chilli market. But despite their names Ms Hopeful seems to always get higher chilli yields than Mr Growing. In Mr Growing's eyes this cannot continue.

### Aim:

This experiment aims to systematically evaluate the effect of light levels, heat levels and chilli variety on crop quality and yield. With our results we will be able to give evidence-based recommendations on optimal growing conditions.

**Particularly we seek to answer:**

1.  Which light and heat settings produce the highest quality chillies?

2.  Does the above depend on variety?

3.  Does quality depend on variety?

4.  How big are the differences?

### Priori Hypothesis:

Prior to collecting the data, we hypothesize:

-   $H_1$: Mean quality will increase with an increase in light levels

-   $H_2$: Mean Quality will increase with intermediate heat levels (2-3), as extreme heat may damage plant cells while insufficient heat limits growth.
  
- $H_3$: There may (or may not) be a Heat $\times$ Light interaction.

-   $H_4$:  Both varieties will show similar response patterns to light and heat treatments. But mean quality will differ by variety.

- $H_5$: Plot side (North/South) will have negligible effect on quality after accounting for other factors.

---

```{r setup, include=FALSE}

# Imports, libraries, and setup 

#install.packages("EDproject_2.0.zip", repos = NULL, type = "win.binary")

library(EDproject)
library(ggplot2)
library(dplyr)
library(tidyr)
library(EDproject)
library(car)
library(knitr)
library(emmeans)
library(multcomp)

# Set global format options
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, 
                      fig.width = 6, fig.height = 4, fig.align = "center")

# Making a color Palette for my document: 
col_palette = c (
  "#0B1D39", 
  "#333333",
  "#666666",
  "#D3D3D3",
  "#f8f8f8", 
  "#F5F5F5",
  "#007ACC",
  "#1DB954",
  "#FF6F61",
  "#f9c74f"
  
)
```

# üîç Experimental Design and Randomization:

## Simulating data:

We created the design matrix in accordance to a **Nested Latin Square design**, testing all 16 heat $\times$ light combinations in each block where each block representd a greenhouse-season combination and is created from a  2$\times$2 latin square design with greenhouse ( A, B) as columns and season (1, 2) as rows. 

**treatment factors:**

-   Light: 4 levels (1, 2, 3, 4)

-   Heat: 4 levels (1, 2, 3, 4)

$\implies 16$ unique treatments

**blocking factors:**

-   Season: (1, 2)

-   Greenhouse: (A, B)

-   Side of greenhouse: (N = north-facing, S = south-facing)

-   Chilli variety: (R = red-hot, F = furious)

**response variables: ** quality score, which combines taste, yield, and look


![Blocking example greenhouse](Example_setup.png)

**Design:**

Within our design we have an outer $2\times2$ Latin square design, creating a 4 outer blocks separating the 4 possible combinations of the 2 greenhouses (A & B) and the 2 seasons. Each of these represents a separate experimental block.

- Block 1 = Season 1 √ó Greenhouse A\
- Block 2 = Season 1 √ó Greenhouse B\
- Block 3 = Season 2 √ó Greenhouse A\
- Block 4 = Season 2 √ó Greenhouse B

Inside each block, there is an inner $2\times2$ Latin square layer, creating a 4 block grid. The variety (*Redhot* or *Furious*) and side (*North* or *South*) were assigned according to the plan shown below:

| Side  | Variety      | Description |
|-------|--------------|-------------|
| North | Redhot (RN)  | 4 plots     |
| North | Furious (FN) | 4 plots     |
| South | Redhot (RS)  | 4 plots     |
| South | Furious (FS) | 4 plots     |

This gives 8 plots per variety and 8 plots per side in each block ‚Äî ensuring full balance within every greenhouse‚Äìseason combination.

The overarching structure is thus such that: Heat-Light is nested within Side-variety which are is nested Season-greenhouse combinations.

![Blocking factors Diagram](Blocking_factors_pic.png){width=70%}


### Randomization:

Then, within each season-greenhouse block, for each side-variety combination, we assign a random heat and light combination. This means that Inside each block, all **16 combinations** of **Heat (H1‚ÄìH4)** and **Light (L1‚ÄìL4)** were used once, creating a full factorial of the two treatment factors.\
These 16 Heat‚ÄìLight combinations were **randomised independently** within each block to reduce bias.

**Constraints: ** 

Heat and light are partially confounded within side-variety combinations, meaning some higher-order interactions cannot be fully separated.

We are limited to 2 greenhouses, 2 seasons, and 16 plots withni each of the greenhouses, 8 plots per side.

### Simulation: 

The simulated quality data was generated using the **`get.observations()`** function with a fixed random seed (**`set.seed(22)`**) to ensure reproducibility.

The generated design matrix was also validated with a loop which checks for correct randomization and that each heat-light combination is used once per side-variety combination.

------------------------------------------------------------------------

```{r}
set.seed(22)

# Outer Latin Square: Determines outer block position
outer_latin_square <- data.frame(
              season = c(1, 1, 2, 2),
              greenhouse = c("A", "B", "A", "B"),
              outer_block = c(1, 2, 3, 4)
)

# Assigning heat and light levels balanced
create_nested_ls <- function(block_id) {
  
  # 4 side-variety combos
  side_var_combos <- expand.grid(
    side = c("n", "s"), 
    variety = c("R", "F")
  )

  design <- data.frame()
  
  for (i in 1:nrow(side_var_combos)) {
    heat_order <- sample(1:4)
    light_order <- sample(1:4)
    combo_design <- data.frame(
      side = rep(side_var_combos$side[i], 4),
      variety = rep(side_var_combos$variety[i], 4),
      heat = heat_order,
      light = light_order
    )
    
    design <- rbind(design, combo_design)
  }
  
  return(design)
}

# Generating the design for all 4 outer blocks
all_designs <- list()

for (i in 1:nrow(outer_latin_square)){
  block_design <- create_nested_ls()
  block_design$season <- outer_latin_square$season[i]
  block_design$greenhouse <- outer_latin_square$greenhouse[i]
  block_design$outer_block <- outer_latin_square$outer_block[i]
  all_designs[[i]] <- block_design
}

# Combining blocks
final_design <- do.call(rbind, all_designs)
final_design$plot <- 1:nrow(final_design)

design_csv <- final_design[c("season", "greenhouse", "light", "heat", "variety", "side", "plot")]
```

```{r, include= FALSE}

cat("--- Design Validation Check ---\n\n")

# unique combinations of s and gh
all_main_blocks <- unique(design_csv[, c("season", "greenhouse")])

for (i in 1:nrow(all_main_blocks)) {
  
  s <- all_main_blocks$season[i]
  gh <- all_main_blocks$greenhouse[i]
  
  cat(paste("========================================\n"))
  cat(paste("    Checking Season:", s, "| Greenhouse:", gh, " \n"))
  cat(paste("========================================\n"))
  

  current_block_data <- subset(design_csv, season == s & greenhouse == gh)
  
  side_variety_combos <- sort(unique(paste(current_block_data$side, current_block_data$variety)))
  

  for (sv in side_variety_combos) {
    cat("\n  Sub-block (Side / Variety):", sv, "\n")
    subset_data <- current_block_data[
      paste(current_block_data$side,
      current_block_data$variety) == sv, ]
    cat("    > Heat levels present: ", paste(sort(unique(subset_data$heat)), collapse=", "), "\n")
    cat("    > Light levels present:", paste(sort(unique(subset_data$light)), collapse=", "), "\n")
  }
  cat("\n")
}

cat("--- Validation Complete ---\n")

# Write file
write.csv(design_csv, "design.csv", row.names = FALSE, quote = FALSE)

```

```{r}

# Obtaining observations:
design <- read.csv("design.csv")
mydata <- get.observations(design)

mydata
```

------------------------------------------------------------------------

# üßÆ Analysis and Results:

### Fitting the models and checking assumptions:

```{r , include=FALSE}

# Convert variables to factors ---------------------------------------------
dat <- na.omit(mydata)
dat$season     <- factor(dat$season)
dat$greenhouse <- factor(dat$greenhouse)
dat$heat       <- factor(dat$heat)
dat$light      <- factor(dat$light)
dat$variety    <- factor(dat$variety)
dat$side       <- factor(dat$side)
dat$block      <- interaction(dat$season, dat$greenhouse, drop = TRUE)

# Fit model ------------------------------------------------------------------
fit <- lm(obs ~ block + side:block + heat*light*variety, data = dat)

# Model summary --------------------------------------------------------------
summary(fit)
```

**The Model & Initial Interpretation**

We fitted a linear model to analyze the Latin Square design, using **Season √ó Greenhouse** combinations as blocks to control for background variation. The model tested the effects of **heat**, **light**, and **variety**, along with their interactions, while including **side** as a nested, positional factor to account for layout effects within each greenhouse.

Due to two missing observations, the design became unbalanced. Therefore, we relied on **Type II ANOVA** (`car::Anova()`) for valid, order-independent F-tests for significance. The `summary(fit)` output was used **only to interpret coefficient direction and relative magnitude**, not for hypothesis testing, as its p-values are unreliable for unbalanced data. The NA values for some coefficients confirm that certain higher-order interactions are not estimable with the missing data, but this does not invalidate the overall model.

From the coefficients, the intercept (~40.48) represents the baseline quality. Positive coefficients for **Heat 3** (~+4.75) and **Heat 4** (~+3.73) suggest a positive effect of heat, while the large coefficients for **Light 2‚Äì4** indicate an even stronger positive effect of light intensity. The model fit is excellent, with an adjusted R¬≤ of 0.93 and a residual standard error of ~1.76.

**ANOVA**

The experiment used a **Latin Square design** with **Season √ó Greenhouse** as blocks and a full factorial of **Heat (4 levels) √ó Light (4 levels) √ó Variety (2 levels)**. The fitted model was:
`obs ~ block + side:block + heat*light*variety`

The fitted linear model was:

$$
\text{obs} = \text{block} + \text{side|block} + \text{heat} \times \text{light}\times \text{variety}
$$

```{r}

# Type II ANOVA
anova_results <- Anova(fit, type = 2)
kable(anova_results, caption = "Type II ANOVA Results")

```

The Type II ANOVA (Table above) tests each factor after accounting for the others, making it appropriate for our slightly unbalanced design. The note *‚Äúmodel has aliased coefficients‚Äù* confirms that some higher-order interactions were not estimable due to the two missing plots; however, the sums of squares were correctly computed by model comparison.

Significant effects were found for **Block** (p = 0.0067), **Heat** (p \< 0.001), **Light** (p \< 0.001), and **Variety** (p = 0.0179). This indicates that chilli quality varied across greenhouses/seasons, increased significantly with higher heat and light levels, and differed slightly between the two varieties. The **Side** factor and all interactions were not significant (p \> 0.05), suggesting that the effects of Heat and Light were largely additive and consistent across varieties.

Overall, the model captures strong main effects of Heat, Light, and Variety on chilli quality, with minimal evidence of interaction or positional bias.

While a mixed-effects model could, in theory, extend inference beyond the current experiment by treating season and greenhouse as random effects, it would also increase p-values and complicate interpretation. Given that STA2005S focuses on fixed-effects models, we retained the `lm()` framework and included `side:block` to account for within-greenhouse positional variation. The factor *Side* (North/South) was thus treated as a nested positional variable rather than a treatment of scientific interest, aligning with the experiment‚Äôs design and objectives.

### Model Diagnostics:

```{r diagnostics, fig.height=6, fig.width=7, fig.cap="Residual diagnostic plots showing no serious violations of model assumptions. The Q-Q plot indicates approximate normality, and the residuals vs. fitted plot shows no strong patterns suggesting heteroscedasticity."}

# Check residual assumptions -----------------------------------------------

par(mfrow = c(2, 2), mar = c(4, 4, 2, 1))
plot(fit, which = 1, col = col_palette[1])  # Residuals vs Fitted
plot(fit, which = 2, col = col_palette[1])  # Normal Q‚ÄìQ
plot(fit, which = 3, col = col_palette[1])  # Scale‚ÄìLocation
plot(fit, which = 5, col = col_palette[1])  # Residuals vs Leverage
par(mfrow = c(1, 1))

```

The model assumptions were checked using standard residual plots. The Residuals vs Fitted plot shows a random scatter of points around zero, indicating that the assumption of linearity and homoscedasticity (constant variance) is satisfied. There are no visible patterns or funnel shapes.

The Q-Q plot shows that the residuals lie close to the straight line, confirming that the normality assumption is reasonable. The Scale-Location plot also shows roughly constant spread across fitted values, supporting equal variance.

Finally, the residuals vs leverage plot shows that no points have unusually high leverage or cooks distance, indicating that no single observation unduly influenced the fitted model.

Overall, these diagnostic plots confirm that the model fits the data well, and the results from the type 2 anova can be considered reliable and valid for interpretation.

### Interaction plots:

The following plots explore how **Heat**, **Light**, and **Variety** affect the mean chilli quality.\
Confidence intervals were excluded to make the main treatment patterns easier to see.

```{r , fig.height=5, fig.width=10, fig.cap="Mean quality stratified by Variety. The plot shows mean quality by Light level (with lines for Heat)"}

# ================================================================
#  Mean plots WITHOUT CIs
# ================================================================

# Ensure factors are correctly coded

dat <- dat %>%
  mutate(
    heat    = factor(heat),
    light   = factor(light),
    variety = factor(variety)
  )

# Summarise means

sumdat <- dat %>%
  group_by(light, heat, variety) %>%
  summarise(
    mean = mean(obs),
    .groups = "drop"
  )

# 1) Mean quality by LIGHT, by Variety
ggplot(sumdat, aes(x = light, y = mean, group = heat,
                   linetype = heat, shape = heat)) +
  geom_line() +
  geom_point(size = 2) +
  facet_wrap(~ variety) +
  labs(title = "Mean quality by Light (lines = Heat), faceted by Variety",
       x = "Light level", y = "Mean quality",
       linetype = "Heat", shape = "Heat") +
  theme_minimal(base_size = 13)

```

```{r, fig.height=5, fig.width=10, fig.cap="Mean quality stratified by Variety. The plot shows mean quality by Heat level (with lines for Light)"}

# 2) Mean quality by HEAT, by Variety
ggplot(sumdat, aes(x = heat, y = mean, group = light,
                   linetype = light, shape = light)) +
  geom_line() +
  geom_point(size = 2) +
  facet_wrap(~ variety) +
  labs(title = "Mean quality by Heat (lines = Light), faceted by Variety",
       x = "Heat level", y = "Mean quality",
       linetype = "Light", shape = "Light") +
  theme_minimal(base_size = 13)

```

```{r , fig.height=4, fig.width=7, fig.cap="Mean quality by Light level, showing the combined Heat x Light x Variety interaction. Line type represents the Heat level, and color represents the Variety"}

# 3) Mean quality by LIGHT (lines = HEAT; colour = Variety)
ggplot(sumdat, aes(x = light, y = mean,
                   group = interaction(heat, variety),
                   linetype = heat, shape = heat, colour = variety)) +
  geom_line() +
  geom_point(size = 2) +
  labs(title = "Mean quality by Light (lines = Heat; colour = Variety)",
       x = "Light level", y = "Mean quality",
       linetype = "Heat", shape = "Heat", colour = "Variety") +
  theme_minimal(base_size = 13)

```

### Interpretation of Mean Plots

The three mean plots above show the relationships between **Heat**, **Light**, and **Variety** on average chilli quality.

#### 1) Mean quality by Light (lines = Heat), faceted by Variety

-   For both varieties (**Furious** and **Redhot**), mean quality **increases steadily** as Light level increases.\
-   The lines for different Heat levels move upward together, meaning that **higher Light improves quality across all Heat levels**.\
-   *Furious* generally achieves **slightly higher mean quality** than *Redhot*.

**Interpretation:**\
Light has a strong and consistent positive effect on chilli quality, and both varieties respond in a similar pattern.

#### 2) Mean quality by Heat (lines = Light), faceted by Variety

-   The lines are **more scattered** with no clear trend as Heat increases.\
-   This suggests that **Heat‚Äôs effect on quality is weaker and less consistent** across all Light levels.\
-   Both varieties show small ups and downs, but no steady direction.

**Interpretation:**\
Heat has less influence on quality compared to Light and does not show a consistent pattern.

#### 3) Mean quality by Light (lines = Heat; colour = Variety)

-   Both *Furious* (red) and *Redhot* (blue) lines **rise with increasing Light**, showing that Light has a strong overall effect.\
-   The shapes of the lines are **very similar between varieties**, and they rarely cross, meaning **no major interactions**.\
-   *Furious* tends to have **slightly higher quality scores overall**.

**Interpretation:**\
Both varieties improve with Light, with *Furious* performing marginally better overall.\
The effects of Heat, Light, and Variety appear largely independent.

### Overall Summary

Across all plots:

-   **Light** shows the **strongest positive effect** on chilli quality.\
-   **Heat** has a **smaller and less consistent influence**.\
-   **Variety** has a **minor main effect**, with *Furious* slightly outperforming *Redhot*.\
-   The mostly **parallel pattern of lines** suggests **weak or no interactions** among the factors.

---

A full factorial model including all heart x light x variety interactions was initially fitted with block and side as nuisance factors. Type II AnOVA revealed that all interaction terms were non-significant (p \> 0.1). Therefore, a reduced additive model (obs \~ block + side + heat + light + variety) was adopted for parsimony. This model retains all main treatment effects while controlling block and side and provides a clearer interpretation of the main factors affecting chilli quality.

### Analysis Procedures

**Missing Values**: Cases with missing observations were excluded from analysis using complete-case analysis, resulting in `r nrow(na.omit(mydata))` observations for model fitting.

**ANOVA**: We used Type II sums of squares to test main effects and interactions, as this approach appropriately handles unbalanced designs caused by missing data and tests each effect after accounting for all other effects at the same or lower level.

**Model Diagnostics**: We examined residual plots (residuals vs. fitted, Q-Q plot, scale-location, and leverage plots) to verify assumptions of normality, homoscedasticity, and identify potential outliers.

------------------------------------------------------------------------

# üßë‚Äçüåæ Conclusions:

This section fits the full model (**obs \~ block + block:side + heat*light*variety**), runs Type-II ANOVA, extracts estimated marginal means with the **emmeans** package, answers the four farmer questions, and builds a cost-aware decision table. Plots and tables are produced inline.

```{r}

#Answer the farmers questions explicitly

# =======================
# Section 6 + 7: Code
# =======================
install.packages("multcomp")
# Drop missing rows (optional but useful for model fitting)
dat_complete <- na.omit(mydata)

# Create 'block' as interaction of season √ó greenhouse
dat_complete$block <- interaction(dat_complete$season, dat_complete$greenhouse, sep = ".")

# Convert all relevant variables to factors
dat_complete$season   <- factor(dat_complete$season)
dat_complete$greenhouse <- factor(dat_complete$greenhouse)
dat_complete$block    <- factor(dat_complete$block)
dat_complete$heat     <- factor(dat_complete$heat)
dat_complete$light    <- factor(dat_complete$light)
dat_complete$variety  <- factor(dat_complete$variety)
dat_complete$side     <- factor(dat_complete$side)

# ======================================================
# Step 2: Fit model (block as Season √ó Greenhouse)
# ======================================================

fit <- lm(obs ~ block + side:block + heat*light*variety, data = dat_complete)

# 1) Which heat & light give the best quality?
# --------------------------------------------
emm_hl <- emmeans(fit, ~ heat * light)   # EMMs for Heat x Light
emm_hl_sum <- summary(emm_hl)            # table with mean, SE, 95% CI
emm_hl_pairs <- pairs(emm_hl, adjust = "tukey")  # Tukey-adjusted pairwise tests

emm_hl_sum
emm_hl_pairs

# 2) Do settings depend on variety? (check interactions with variety)
# -------------------------------------------------------------------
#Anova(fit, type = 2)  # look at heat:variety, light:variety, and heat:light:variety rows

# 3) Does quality depend on variety? (main effect)
# -----------------------------------------------
emm_var <- emmeans(fit, ~ variety)
emm_var_sum <- summary(emm_var)
emm_var_sum

# 4) How big are the differences? (effect size with CI)
# -----------------------------------------------------
var_contr <- contrast(emm_var, "pairwise", adjust = "tukey")
var_contr

# 5) Build a small decision table for cost-aware recommendation (Section 7)
# ------------------------------------------------------------------------
# Rank Heat x Light means, compute difference from best (Œî)

# Create clean data frame 
decision_df <- as.data.frame(emm_hl_sum)

# Remove problematic rows manually
decision_df <- decision_df[!is.na(decision_df$emmean) & !is.na(decision_df$SE), ]

decision_tbl <- decision_df |>
  mutate(
    heat = as.numeric(as.character(heat)),
    light = as.numeric(as.character(light)),
    mean = emmean,
    lower = lower.CL,
    upper = upper.CL
  ) |>
  arrange(desc(mean)) |>
  mutate(
    best_mean = first(mean),
    delta_vs_best = mean - best_mean
  ) |>
  dplyr::select(heat, light, mean, lower, upper, delta_vs_best)

decision_tbl

# Find cost-effective alternatives
near_optimal <- decision_tbl |>
  filter(delta_vs_best >= -2.0) |>
  mutate(energy_cost = heat + light) |>
  arrange(energy_cost)

near_optimal

```

The initial model included "side nested within block (block:side) to account for positional effects.

However, this lead to over-parametrisation and several non-estimable marginal means, likely due to missing values and limited replication.

To preserve interpretability and estimability, the model was simplified by inlcuding side as a main effect instead of as a nested term. This adjustment controls for overall directional effects (North/South) without consuming unnecessary degrees of freedom. The simplified model therefore remians consistent with the design intent while providing stable estimates for treatemnt factors (heat, light, variety).

When `side` was fitted as a main effect (`block + side + ...`), it appeared statistically significant (p \< 0.001). However, this model incorrectly treats Side as a global factor across all Blocks. In the correct model (`block + side:block + ...`), Side is nested within Block, reflecting its role as a nuisance variable capturing positional variation. Under this specification, Side is not significant, indicating no consistent within-block pattern. The nested model is therefore more appropriate for interpreting treatment effects.

### üîé Q1 ‚Äî Which Heat √ó Light is best?

**Optimal Conditions: **

```{r best-combinations}

# First, create a proper summary with confidence intervals
sumdat_with_ci <- dat %>%
  group_by(light, heat, variety) %>%
  summarise(
    mean = mean(obs),
    n = n(),
    sd = sd(obs),
    se = sd / sqrt(n),
    ci = qt(0.975, df = n-1) * se,  # 95% CI
    .groups = "drop"
  )

# Then find top combinations with proper CIs
top_combos <- sumdat_with_ci %>%
  arrange(desc(mean)) %>%
  mutate(
    mean_quality = mean,
    ci_lower = mean - ci,
    ci_upper = mean + ci
  ) %>%
  head(3)

kable(top_combos[, c("variety", "light", "heat", "mean_quality", "ci_lower", "ci_upper")],
      digits = 2,
      caption = "Top three treatment combinations by mean quality score",
      col.names = c("Variety", "Light", "Heat", "Mean Quality", "CI Lower", "CI Upper"),
      align = c("l", "c", "c", "r", "r", "r"))

```

**Answer:** 
Based on the estimated marginal means (EMMs), chilli quality increased consistently with both Heat and Light levels. The top four treatment combinations were Heat 3 √ó Light 4 (mean = 56.26), Heat 3 √ó Light 3 (55.77), Heat 4 √ó Light 4 (55.73), and Heat 4 √ó Light 3 (55.24). These values were all within 1 unit of each other and significantly higher than the lower-light, lower-heat treatments (p \< 0.001 for most pairwise contrasts). Hence, the best chilli quality was achieved under moderate-high heat (level 3‚Äì4) combined with the highest light intensity (level 4). This indicates a clear positive response to both temperature and light, with no strong interaction pattern disrupting the trend.

### üå± Q2 ‚Äî Do best settings depend on Variety?

**Answer:**
The ANOVA output shows that the interactions between variety and the treatment factors‚Äînamely *heat √ó variety*, *light √ó variety*, and *heat √ó light √ó variety*‚Äîwere all non-significant (p = 0.11, 0.66, and 0.59 respectively). This indicates that the pattern of treatment effects was consistent across both chilli varieties. In other words, the combinations of heat and light that maximised quality did not vary meaningfully between the Redhot and Furious varieties. Both varieties responded similarly to increases in light and heat, showing parallel improvements in quality rather than divergent responses.

### üçÖ Q3 ‚Äî Does quality depend on Variety?

**Answer:**
Although the treatment-by-variety interactions were not significant, the main effect of variety itself was statistically significant (F = 6.51, p = 0.017). Estimated marginal means show that Redhot chillies (mean = 50.2 ¬± 0.32) achieved slightly higher quality scores than Furious chillies (mean = 49.0 ¬± 0.30). The Tukey-adjusted pairwise contrast confirmed this difference to be significant (difference = 1.16 ¬± 0.44, t = ‚Äì2.65, p = 0.011). Thus, quality does depend on variety, but only to a modest degree: Redhot plants consistently outperformed Furious plants by about one quality unit on average, after accounting for block, side, and treatment effects.

### Question 4: How big are the differences?


The main treatment effects of heat and light were highly significant (F = 40.37 and 172.91, p \< 0.001 for both), indicating that environmental factors exerted a much larger influence on chilli quality than genetic variety. Increasing light levels produced the greatest improvement in mean quality‚Äîroughly a 16-unit rise between the lowest and highest intensities‚Äîwhile raising heat levels contributed an additional 8-unit gain. Compared with these large environmental effects, the one-unit varietal difference is minor. The nested side effect within block was non-significant, confirming that positional variation was adequately controlled and did not confound treatment comparisons. Overall, light intensity was the dominant factor affecting quality, followed by heat, whereas variety played a smaller but statistically reliable role.

```{r}

```

---

# üåû Future Reccomendations:

**Primary Recommendation**: Based on this experiment, we recommend a **Heat 3 √ó Light 4** setting for maximizing chili quality. Moderate heat and high light leads to best crop quality and yield.

**Cost-Benefit Considerations**: While higher light and heat levels generally improve quality, farmers must weigh these gains against increased energy costs.

**Variety Selection**: ** *Redhot* ‚âà **1.15** points higher than *Furious* (p ‚âà 0.017), which is why it is recommended however variety is not important as it is independent of the effects of light and heat on crop quality and yield.(all HL√óVar interactions non-significant).

**Practical Implementation**: - If energy is a concern, **H4√óL3** (‚âà ‚àí1.1) or **H3√óL3** (‚âà ‚àí1.7; lower proxy) are practical alternatives.

## Study Limitations

1.  **Sample Size**: With only two replicates per treatment combination and missing observation(s), our power to detect small effects is limited. Confidence intervals for some comparisons are wide.

2.  **Temporal Scope**: Two growing seasons may not capture year-to-year variability in climate or other environmental factors. Long-term validation is recommended.

3.  **Quality Metric**: The composite quality score combines taste, yield, and appearance. Economic returns may depend more heavily on one component (e.g., yield). Future studies should examine these components separately.

4.  **Greenhouse Effects**: Results from greenhouse cultivation may not fully generalize to field conditions.

5.  **Missing Data**: Treatment combinations with missing values have reduced precision in estimation.

## Future Directions

-   Replicate the experiment with larger sample sizes to narrow confidence intervals
-   Conduct economic analysis incorporating energy costs and market prices
-   Separate quality into components (taste, yield, appearance) for targeted optimization
-   Test intermediate settings between levels to fine-tune recommendations
-   Evaluate performance under varying weather conditions across multiple years

------------------------------------------------------------------------

\newpage

# References:

-   STA2005S Experimental Design Project (2025) handout. Department of Statistical Sciences, UCT.
-   R Core Team (2025). *R: A Language and Environment for Statistical Computing*. R Foundation for Statistical Computing, Vienna.
-   Fox, J. & Weisberg, S. (2019). *An R Companion to Applied Regression* (3rd ed.). (used for `car::Anova`)
-   Lenth, R. V. (2024). *emmeans: Estimated Marginal Means*. R package.
-   Wickham, H., Fran√ßois, R., Henry, L., & M√ºller, K. (2023). *dplyr: A Grammar of Data Manipulation*. R package.
-   Wickham, H. (2016). *ggplot2: Elegant Graphics for Data Analysis*. Springer. (used for plots)

------------------------------------------------------------------------

\newpage

# Data and Design: 

```{r}

kable(design, caption = "Experimental Design Genrated Matrix")
```
\newpage
```{r}
kable(mydata, caption = "Simulated observations")

```

\rule{\linewidth}{0.2pt}

# R code: 

```{r, eval= FALSE, echo=TRUE}

# Imports, libraries, and setup 

#install.packages("EDproject_2.0.zip", repos = NULL, type = "win.binary")

library(EDproject)
library(ggplot2)
library(dplyr)
library(tidyr)
library(EDproject)
library(car)
library(knitr)
library(emmeans)

# Set global format options
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, 
                      fig.width = 6, fig.height = 4, fig.align = "center")

# Making a color Palette for my document: 
col_palette = c (
  "#0B1D39", 
  "#333333",
  "#666666",
  "#D3D3D3",
  "#f8f8f8", 
  "#F5F5F5",
  "#007ACC",
  "#1DB954",
  "#FF6F61",
  "#f9c74f"
  
)

#_________________________________________________________________________

set.seed(22)

# Outer Latin Square: Determines outer block position
outer_latin_square <- data.frame(
              season = c(1, 1, 2, 2),
              greenhouse = c("A", "B", "A", "B"),
              outer_block = c(1, 2, 3, 4)
)

# Assigning heat and light levels balanced
create_nested_ls <- function(block_id) {
  
  # 4 side-variety combos
  side_var_combos <- expand.grid(
    side = c("n", "s"), 
    variety = c("R", "F")
  )

  design <- data.frame()
  
  for (i in 1:nrow(side_var_combos)) {
    heat_order <- sample(1:4)
    light_order <- sample(1:4)
    combo_design <- data.frame(
      side = rep(side_var_combos$side[i], 4),
      variety = rep(side_var_combos$variety[i], 4),
      heat = heat_order,
      light = light_order
    )
    
    design <- rbind(design, combo_design)
  }
  
  return(design)
}

# Generating the design for all 4 outer blocks
all_designs <- list()

for (i in 1:nrow(outer_latin_square)){
  block_design <- create_nested_ls()
  block_design$season <- outer_latin_square$season[i]
  block_design$greenhouse <- outer_latin_square$greenhouse[i]
  block_design$outer_block <- outer_latin_square$outer_block[i]
  all_designs[[i]] <- block_design
}

# Combining blocks
final_design <- do.call(rbind, all_designs)
final_design$plot <- 1:nrow(final_design)

design_csv <- final_design[c("season", "greenhouse", 
                             "light", "heat", "variety", "side", "plot")]

#_________________________________________________________________________


cat("--- Design Validation Check ---\n\n")

# unique combinations of s and gh
all_main_blocks <- unique(design_csv[, c("season", "greenhouse")])

for (i in 1:nrow(all_main_blocks)) {
  
  s <- all_main_blocks$season[i]
  gh <- all_main_blocks$greenhouse[i]
  
  cat(paste("========================================\n"))
  cat(paste("    Checking Season:", s, "| Greenhouse:", gh, " \n"))
  cat(paste("========================================\n"))
  

  current_block_data <- subset(design_csv, season == s & greenhouse == gh)
  
  side_variety_combos <- sort(unique(paste(current_block_data$side,
                                           current_block_data$variety)))
  

  for (sv in side_variety_combos) {
    cat("\n  Sub-block (Side / Variety):", sv, "\n")
    subset_data <- current_block_data[paste(
      current_block_data$side,
      current_block_data$variety) == sv, ]
    cat("    > Heat levels present: ", 
        paste(sort(unique(subset_data$heat)), collapse=", "), "\n")
    cat("    > Light levels present:", 
        paste(sort(unique(subset_data$light)), collapse=", "), "\n")
  }
  cat("\n")
}

cat("--- Validation Complete ---\n")

# Write file
write.csv(design_csv, "design.csv", row.names = FALSE, quote = FALSE)

#_________________________________________________________________________


# Obtaining observations:
design <- read.csv("design.csv")
mydata <- get.observations(design)

mydata

#_________________________________________________________________________

# Convert variables to factors ---------------------------------------------
dat <- na.omit(mydata)
dat$season     <- factor(dat$season)
dat$greenhouse <- factor(dat$greenhouse)
dat$heat       <- factor(dat$heat)
dat$light      <- factor(dat$light)
dat$variety    <- factor(dat$variety)
dat$side       <- factor(dat$side)
dat$block      <- interaction(dat$season, dat$greenhouse, drop = TRUE)

# Fit model ------------------------------------------------------------------
fit <- lm(obs ~ block + side:block + heat*light*variety, data = dat)

# Model summary --------------------------------------------------------------
summary(fit)

#_________________________________________________________________________

# Type I ANOVA
anova(fit)

# Type II ANOVA
Anova(fit, type = 2)

#_________________________________________________________________________


# Check residual assumptions -----------------------------------------------

par(mfrow = c(2, 2), mar = c(4, 4, 2, 1))
plot(fit, which = 1, col = col_palette[1])  # Residuals vs Fitted
plot(fit, which = 2, col = col_palette[1])  # Normal Q‚ÄìQ
plot(fit, which = 3, col = col_palette[1])  # Scale‚ÄìLocation
plot(fit, which = 5, col = col_palette[1])  # Residuals vs Leverage
par(mfrow = c(1, 1))

#_________________________________________________________________________

# Interaction plots: 
par(mfrow = c(1,2))

# quality vs LIGHT by HEAT
interaction.plot(x.factor = dat$light, trace.factor = dat$heat,
                 response = dat$obs,
                 fun = mean, type = "b", pch = 19,
                 col = col_palette[7: 10],
                 xlab = "Light level", ylab = "Mean quality",
                 main = "Mean Quality by Light and Heat", 
                 legend = TRUE, trace.label = "Heat")

# quality vs HEAT by LIGHT
interaction.plot(x.factor = dat$heat, trace.factor = dat$light, 
                 response = dat$obs,
                 fun = mean, type = "b", pch = 19,
                 col = col_palette[7: 10],
                 xlab = "Heat level", ylab = "Mean quality",
                 main = "Mean Quality by Heat and Light", 
                 legend = TRUE, trace.label = "Light")
par(mfrow = c(1,1))

#_________________________________________________________________________

# By variety
par(mfrow = c(1,2))
with(subset(dat, variety == "R"),
     interaction.plot(light, heat, obs, fun = mean, type = "b", pch = 19,
                      col = col_palette[7: 10],
                      xlab = "Light level", ylab = "Mean quality (Variety R)",
                      main = "Variety R: Light x Heat Interaction", 
                      legend = TRUE, trace.label = "Heat"))
with(subset(dat, variety == "F"),
     interaction.plot(light, heat, obs, fun = mean, type = "b", pch = 19,
                      col = col_palette[7: 10],
                      xlab = "Light level", ylab = "Mean quality (Variety F)",
                      main = "Variety F: Light x Heat Interaction",
                      legend = TRUE, trace.label = "Heat"))
par(mfrow = c(1,1))

#_________________________________________________________________________

# ================================================================
#  Mean plots WITHOUT CIs
# ================================================================

# Ensure factors are correctly coded

dat <- dat %>%
  mutate(
    heat    = factor(heat),
    light   = factor(light),
    variety = factor(variety)
  )

# Summarise means

sumdat <- dat %>%
  group_by(light, heat, variety) %>%
  summarise(
    mean = mean(obs),
    .groups = "drop"
  )

# 1) Mean quality by LIGHT, by Variety
ggplot(sumdat, aes(x = light, y = mean, group = heat,
                   linetype = heat, shape = heat)) +
  geom_line() +
  geom_point(size = 2) +
  facet_wrap(~ variety) +
  labs(title = "Mean quality by Light (lines = Heat), stratified by Variety",
       x = "Light level", y = "Mean quality",
       linetype = "Heat", shape = "Heat") +
  theme_minimal(base_size = 13) + 
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

#_________________________________________________________________________


# 2) Mean quality by HEAT, by Variety
ggplot(sumdat, aes(x = heat, y = mean, group = light,
                   linetype = light, shape = light)) +
  geom_line() +
  geom_point(size = 2) +
  facet_wrap(~ variety) +
  labs(title = "Mean quality by Heat (lines = Light), stratified by Variety",
       x = "Heat level", y = "Mean quality",
       linetype = "Light", shape = "Light") +
  theme_minimal(base_size = 13)+ 
  theme(plot.title = element_text(hjust = 0.5, face = "bold")) 

#_________________________________________________________________________

# 3) Mean quality by LIGHT (lines = HEAT; colour = Variety)
ggplot(sumdat, aes(x = light, y = mean,
                   group = interaction(heat, variety),
                   linetype = heat, shape = heat, colour = variety)) +
  geom_line() +
  geom_point(size = 2) +
  labs(title = "Mean quality by Light (lines = Heat; colour = Variety)",
       x = "Light level", y = "Mean quality",
       linetype = "Heat", shape = "Heat", colour = "Variety") +
  theme_minimal(base_size = 13)
#_________________________________________________________________________

anova_tbl <- Anova(fit, type = 2)
anova_tbl

#_________________________________________________________________________

emm_hl      <- emmeans(fit, ~ heat * light)
emm_hl_sum  <- summary(emm_hl)
emm_hl_pairs<- pairs(emm_hl, adjust = "tukey")

kable(emm_hl_sum, digits = 2, caption = "EMMs: Heat √ó Light")
emm_hl_pairs

#_________________________________________________________________________

emm_hl_by_v <- emmeans(fit, ~ heat * light | variety)
best_by_v <- summary(emm_hl_by_v) |>
group_by(variety) |>
slice_max(emmean, n = 1, with_ties = FALSE)
kable(best_by_v, digits = 2, caption = "Best Heat√óLight within each Variety")

#_________________________________________________________________________

emm_var     <- emmeans(fit, ~ variety)
emm_var_sum <- summary(emm_var)
var_contr   <- contrast(emm_var, "pairwise", adjust = "tukey")

kable(emm_var_sum, digits = 2, caption = "Variety means (EMMs)")
var_contr

#_________________________________________________________________________


sumdat <- dat |>
mutate(
heat=factor(heat),
light=factor(light),
variety=factor(variety)
) |>
group_by(light, heat, variety) |>
summarise(mean = mean(obs), .groups="drop")

#_________________________________________________________________________

# 1) Mean by Light; lines = Heat; facet Variety

ggplot(sumdat, aes(x=light, y=mean, group=heat, linetype=heat, shape=heat)) +
geom_line() + geom_point(size=2) +
facet_wrap(~ variety) +
labs(title="Mean quality by Light (lines = Heat), faceted by Variety",
x="Light level", y="Mean quality", linetype="Heat", shape="Heat") +
theme_minimal(base_size = 13)

#_________________________________________________________________________

# 2) Mean by Heat; lines = Light; facet Variety

ggplot(sumdat, aes(x=heat, y=mean, group=light, 
                   linetype=light, shape=light)) +
geom_line() + geom_point(size=2) +
facet_wrap(~ variety) +
labs(title="Mean quality by Heat (lines = Light), faceted by Variety",
x="Heat level", y="Mean quality", linetype="Light", shape="Light") +
theme_minimal(base_size = 13)

#_________________________________________________________________________

# 3) Mean by Light; lines = Heat; colour = Variety

ggplot(sumdat, aes(x=light, y=mean,
group=interaction(heat,variety),
linetype=heat, shape=heat, colour=variety)) +
geom_line() + geom_point(size=2) +
labs(title="Mean quality by Light (lines = Heat; colour = Variety)",
x="Light level", y="Mean quality",
linetype="Heat", shape="Heat", colour="Variety") +
theme_minimal(base_size = 13)

#_________________________________________________________________________

decision_tbl <- emm_hl_sum |>
as.data.frame() |>
mutate(
heat  = as.integer(as.character(heat)),
light = as.integer(as.character(light))
) |>
rename(mean = emmean, lower = lower.CL, upper = upper.CL) |>
arrange(desc(mean)) |>
mutate(best_mean = first(mean),
delta_vs_best = mean - best_mean,   # negative = lower than best
energy_proxy = heat + light) |>
select(heat, light, mean, lower, upper, delta_vs_best, energy_proxy)

kable(decision_tbl, digits = 2,
caption = "Ranked Heat√óLight (Œî = mean ‚àí best; energy proxy = heat + light)")

near_optimal <- decision_tbl |>
filter(delta_vs_best >= -2.0) |>
arrange(energy_proxy, desc(mean))

kable(near_optimal, digits = 2,
caption = "Near-optimal within 2 points of best (sorted by energy proxy)")

#_________________________________________________________________________

# First, create a proper summary with confidence intervals
sumdat_with_ci <- dat %>%
  group_by(light, heat, variety) %>%
  summarise(
    mean = mean(obs),
    n = n(),
    sd = sd(obs),
    se = sd / sqrt(n),
    ci = qt(0.975, df = n-1) * se,  # 95% CI
    .groups = "drop"
  )

# Then find top combinations with proper CIs
top_combos <- sumdat_with_ci %>%
  arrange(desc(mean)) %>%
  mutate(
    mean_quality = mean,
    ci_lower = mean - ci,
    ci_upper = mean + ci
  ) %>%
  head(3)

kable(top_combos[, c("variety", "light", "heat", 
                     "mean_quality", "ci_lower", "ci_upper")],
      digits = 2,
      caption = "Top three treatment combinations by mean quality score",
      col.names = c("Variety", "Light", "Heat", 
                    "Mean Quality", "CI Lower", "CI Upper"),
      align = c("l", "c", "c", "r", "r", "r"))
```
